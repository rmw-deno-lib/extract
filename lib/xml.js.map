{
  "version": 3,
  "file": "xml.js",
  "sourceRoot": "..",
  "sources": [
    "src/xml.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,OAAA,IAAO,EAAA,GAAK,CAAC,GAAD,EAAM,GAAN,CAAA,GAAA;AACZ,MAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA;EAAE,CAAA,GAAI;EACJ,KAAA,GAAQ;EACR,OAAA,GAAU,GAAG,CAAC,MAAJ,GAAa;AACvB,SAAA,IAAA;IACE,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,CAAA,CAAZ,EAAwB,KAAxB;IACN,IAAG,GAAA,GAAM,CAAT;AACE,aAAO,EADT;;IAEA,KAAA,GAAQ,GAAA,GAAI;IACZ,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,CAAA,EAAA,CAAA,CAAK,GAAL,CAAA,CAAA,CAAZ,EAAyB,KAAzB;IACN,IAAG,GAAA,GAAM,CAAT;AACE,aAAO,EADT;;IAEA,CAAC,CAAC,IAAF,CAAO,GAAG,kBAAa,CAAC,IAAjB,CAAA,CAAP;IACA,KAAA,GAAQ,GAAA,GAAI,OAAJ,GAAY;EATtB;AAJU;;AAgBZ,OAAA,IAAO,GAAA,GAAM,CAAC,GAAD,EAAM,GAAN,CAAA,GAAA;AACb,MAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA;EAAE,GAAA,GAAM,GAAG,CAAC,MAAJ,GAAa;EACnB,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,CAAA,CAAZ;EACN,IAAG,GAAA,GAAM,CAAT;AACE,WADF;;EAEA,KAAA,GAAQ,GAAA,GAAI;EACZ,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,CAAA,EAAA,CAAA,CAAK,GAAL,CAAA,CAAA,CAAZ,EAAyB,KAAzB;EACN,IAAG,GAAA,GAAM,CAAT;AACE,WADF;;AAEA,SAAO,GAAG,kBAAa,CAAC,IAAjB,CAAA;AATI;;AAWb,OAAA,IAAO,GAAA,GAAY,MAAN,MAAA,IAAA;EACX,WAAa,GAAA,CAAA;IAAC,IAAC,CAAA;EAAF;;EACb,EAAI,CAAC,GAAD,CAAA;WACF,EAAA,CAAG,IAAC,CAAA,CAAJ,EAAO,GAAP;EADE;;EAEJ,GAAK,CAAC,GAAD,CAAA;WACH,GAAA,CAAI,IAAC,CAAA,CAAL,EAAQ,GAAR;EADG;;AAJM;;AAOb,OAAA,QAAe,CAAC,CAAD,CAAA,GAAA;SACb,IAAI,GAAJ,CAAQ,CAAR;AADa",
  "sourcesContent": [
    "export li = (xml, tag)=>\n  r = []\n  begin = 0\n  tag_len = tag.length + 2\n  loop\n    pos = xml.indexOf(\"<#{tag}>\", begin)\n    if pos < 0\n      return r\n    begin = pos+tag_len\n    end = xml.indexOf(\"</#{tag}>\", begin)\n    if end < 0\n      return r\n    r.push xml[begin...end].trim()\n    begin = end+tag_len+1\n  return\n\nexport one = (xml, tag)=>\n  len = tag.length + 2\n  pos = xml.indexOf(\"<#{tag}>\")\n  if pos < 0\n    return\n  begin = pos+len\n  end = xml.indexOf(\"</#{tag}>\", begin)\n  if end < 0\n    return\n  return xml[begin...end].trim()\n\nexport Xml = class Xml\n  constructor: (@$)->\n  li: (tag)->\n    li(@$, tag)\n  one: (tag)->\n    one(@$, tag)\n\nexport default ($)=>\n  new Xml($)\n\n\n"
  ]
}